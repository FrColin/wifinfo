name: Unit tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v1
      with:
        python-version: '3.7'

    - name: Configure system
      run: |
        sudo apt-get install -y libgtest-dev python3 python3-pip xsltproc
        pip3 install -U setuptools wheel
        pip3 install -U gcovr cpp-coveralls coverage click pyyaml
        wget -nv -P test/support/nlohmann/ https://github.com/nlohmann/json/releases/download/v3.7.3/json.hpp

    - name: Build
      run: |
        set -x
        mkdir -p build artifacts
        cd build
        cmake -DCODE_COVERAGE=ON ..
        make -j
        ./tic --gtest_output=xml
        cd ..
        coverage run test/test_eeprom.py
        wget -nv https://github.com/adarmalik/gtest2html/raw/master/gtest2html.xslt
        xsltproc gtest2html.xslt build/test_detail.xml > artifacts/test_detail.html
        gcovr -r . --html -o artifacts/coverage.html

    - name: Amalgamation for Arduino IDE
      run: |
        tools/mkarduinosrc.py -1 artifacts/wifinfo-amalgamation.zip

    - name: Archive tests and code coverage results
      uses: actions/upload-artifact@v1
      with:
        name: tests-code-coverage-results
        path: artifacts/

    # - name: Upload to coveralls.io
    #   run: |
    #     cpp-coveralls --exclude .pio/ --exclude test/ --exclude build/CMakeFiles/*/CompilerIdC/ --exclude build/CMakeFiles/*/CompilerIdCXX/ --gcov-options '\-lp'
    #   env:
    #     COVERALLS_REPO_TOKEN: ${{ secrets.coveralls_token }}

    - name: Upload to Codacy
      run: |
        gcovr -r . --xml -o cobertura.xml
        bash <(curl -Ls https://coverage.codacy.com/get.sh) report -l cpp
      env:
        CODACY_PROJECT_TOKEN: ${{ secrets.codacy_token }}

    - name: Upload to Codecov
      run: |
        # gcovr -r . --xml -o cobertura.xml
        bash <(curl -s https://codecov.io/bash)
      env:
        CODECOV_TOKEN: ${{ secrets.codecov_token }}
